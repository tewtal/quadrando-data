uw1_data = [
0x22, 0x32, 0x22, 0x22, 0x05, 0x26, 0x36, 0x64, 0x3A, 0x36, 0x3E, 0x22, 0x22, 0x26, 0x22, 0x69,
0xFE, 0x92, 0x06, 0xE6, 0x22, 0x32, 0xA6, 0x26, 0x3E, 0xB6, 0x06, 0xE6, 0xF6, 0x22, 0xFE, 0x22,
0x16, 0x96, 0x26, 0x36, 0xE2, 0x86, 0x26, 0x22, 0x1E, 0xA2, 0x26, 0x22, 0xA2, 0x06, 0xE2, 0x12,
0xA2, 0xA6, 0x26, 0xA2, 0xE6, 0x36, 0x26, 0x02, 0xFE, 0xE6, 0x26, 0xF6, 0xE6, 0x22, 0x02, 0x92,
0x02, 0x26, 0x36, 0x12, 0x32, 0xA6, 0x36, 0x02, 0x02, 0x22, 0x22, 0xA2, 0x22, 0xFE, 0x1E, 0x92,
0x06, 0x22, 0xA6, 0x82, 0x86, 0x22, 0xA2, 0x06, 0xE2, 0x1E, 0x06, 0x02, 0x06, 0xE6, 0x02, 0x92,
0x32, 0x02, 0x26, 0x16, 0x26, 0xE6, 0xE2, 0x32, 0x02, 0x06, 0x36, 0x02, 0x26, 0x22, 0x02, 0x86,
0x26, 0x02, 0x26, 0xA2, 0x26, 0x09, 0x02, 0x86, 0x06, 0x22, 0xA6, 0x06, 0x22, 0x02, 0x06, 0x22,
0x34, 0xA3, 0x07, 0x26, 0x05, 0x36, 0xA6, 0x06, 0x1D, 0x32, 0x92, 0x84, 0x26, 0x22, 0xE6, 0x69,
0x32, 0x92, 0x9E, 0xE6, 0x26, 0x24, 0x33, 0x84, 0x3E, 0x03, 0x03, 0x06, 0x26, 0x26, 0x32, 0x84,
0x23, 0x07, 0x36, 0xA7, 0x36, 0xA2, 0x17, 0xA7, 0x32, 0x87, 0x3E, 0x04, 0x22, 0x07, 0x36, 0xA6,
0x37, 0xBF, 0x06, 0x27, 0x26, 0x3E, 0x06, 0x27, 0x26, 0x3F, 0x06, 0x26, 0x27, 0x26, 0x21, 0x06,
0x27, 0x20, 0xE2, 0x16, 0xA2, 0x06, 0x23, 0x07, 0x26, 0x22, 0x16, 0xB6, 0xB2, 0x85, 0x22, 0x06,
0x23, 0x06, 0x3E, 0x02, 0x06, 0x3F, 0xE2, 0x07, 0x27, 0x36, 0xA2, 0x12, 0x9E, 0xE6, 0x36, 0xA6,
0x32, 0x36, 0xA7, 0x26, 0x32, 0x92, 0x97, 0xA4, 0x26, 0x26, 0x24, 0x26, 0x22, 0xE2, 0x16, 0xA6,
0x22, 0x07, 0x22, 0x03, 0x06, 0x09, 0x23, 0x06, 0x36, 0xA3, 0x07, 0x22, 0x07, 0x23, 0x06, 0x22,
0x0E, 0xDB, 0x09, 0x00, 0x98, 0x8C, 0x00, 0x69, 0x69, 0x7B, 0xB3, 0x0C, 0x00, 0x00, 0x32, 0x68,
0x3C, 0x35, 0x52, 0x03, 0x00, 0x0D, 0xDB, 0x0F, 0x04, 0xB3, 0xA4, 0xFC, 0x34, 0xB3, 0x46, 0x0B,
0x52, 0x55, 0x0A, 0x06, 0x39, 0x56, 0x70, 0xB0, 0x7B, 0x7B, 0xDB, 0x0B, 0xF7, 0x72, 0xE8, 0x55,
0x72, 0x52, 0xB3, 0x2A, 0xB0, 0x3D, 0x00, 0x0B, 0xFC, 0x52, 0xFC, 0xAD, 0x7B, 0x00, 0x01, 0xEE,
0x53, 0x0C, 0x15, 0x55, 0x06, 0xE7, 0x00, 0x70, 0x09, 0xEF, 0x5B, 0x13, 0xAD, 0x3C, 0x68, 0x05,
0x52, 0xDB, 0x9B, 0x6A, 0xDB, 0x53, 0x31, 0x53, 0xDB, 0x4B, 0xEE, 0x0B, 0x0B, 0xEF, 0x46, 0x55,
0xCB, 0x12, 0x52, 0x2A, 0x4C, 0x70, 0x30, 0x0E, 0x53, 0xCB, 0x0D, 0x53, 0xA8, 0x68, 0x28, 0x95,
0xDB, 0x00, 0x1B, 0x00, 0x6A, 0xC8, 0x00, 0x56, 0x64, 0x00, 0x64, 0x93, 0x00, 0x00, 0x68, 0x6A,
0xA6, 0x16, 0x81, 0x29, 0x3F, 0x62, 0x5A, 0x3E, 0x3E, 0xCA, 0x8A, 0xA6, 0x29, 0x29, 0x25, 0x3F,
0x06, 0x26, 0x4A, 0x85, 0x29, 0xA6, 0x18, 0xA6, 0x85, 0x93, 0x18, 0x83, 0x06, 0x9B, 0x0D, 0xA6,
0x15, 0x12, 0xDA, 0x15, 0x24, 0x07, 0x14, 0x95, 0x8D, 0x94, 0x1D, 0xA6, 0x80, 0x93, 0x1D, 0x00,
0x98, 0x17, 0xCA, 0x17, 0x1E, 0x04, 0x29, 0x17, 0xCA, 0x13, 0xE2, 0xCA, 0x97, 0x29, 0xA5, 0x80,
0x15, 0xA6, 0x62, 0x1F, 0x02, 0x0D, 0x12, 0x15, 0x81, 0x80, 0x0F, 0x08, 0x80, 0x25, 0x02, 0x24,
0x11, 0x03, 0x1E, 0x02, 0x03, 0x13, 0x00, 0x17, 0x24, 0x1D, 0x80, 0x00, 0x1F, 0x9E, 0x1F, 0x03,
0x3F, 0x02, 0x0C, 0x1E, 0x5A, 0x02, 0x18, 0xA6, 0x1D, 0x1B, 0xA6, 0x11, 0x00, 0x03, 0x0D, 0x1E,
0x00, 0x21, 0x00, 0x21, 0x1D, 0x3F, 0x21, 0x1D, 0x1F, 0x21, 0x03, 0x03, 0x21, 0x21, 0x00, 0x3F,
0x03, 0x99, 0x83, 0x1B, 0x05, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x1B, 0x1B, 0x1A, 0x0C,
0x03, 0x03, 0x23, 0x1A, 0x1B, 0x03, 0x19, 0x03, 0x03, 0x17, 0x99, 0x43, 0x1A, 0x43, 0x40, 0x03,
0x03, 0x97, 0x03, 0x19, 0x1A, 0x63, 0x19, 0x99, 0x0F, 0x99, 0x19, 0x03, 0x43, 0x99, 0x03, 0x0F,
0x83, 0x03, 0x03, 0x19, 0x63, 0x1A, 0x1B, 0x96, 0x03, 0x83, 0x03, 0x03, 0x80, 0x1B, 0x19, 0x00,
0x99, 0x03, 0x03, 0x17, 0x1D, 0x39, 0x97, 0x19, 0x03, 0x19, 0x00, 0x19, 0x77, 0x1A, 0x19, 0x1E,
0x83, 0x19, 0x03, 0x19, 0x16, 0x19, 0x00, 0x8F, 0x19, 0x03, 0x16, 0x00, 0x03, 0x6F, 0x03, 0x17,
0x0D, 0x03, 0x96, 0x03, 0x03, 0x00, 0x99, 0x03, 0x16, 0x00, 0x03, 0x19, 0x19, 0x03, 0x03, 0x16,
0x19, 0x03, 0x19, 0x03, 0x19, 0x10, 0x03, 0x19, 0x03, 0x03, 0x99, 0x19, 0x03, 0x03, 0x19, 0x0A,
0x00, 0x20, 0x00, 0x30, 0x30, 0x05, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00,
0x01, 0x00, 0x04, 0x07, 0x30, 0x00, 0x20, 0x00, 0x01, 0x07, 0x00, 0x01, 0x07, 0x00, 0x17, 0x00,
0x00, 0x00, 0x20, 0x37, 0x07, 0x00, 0x27, 0x20, 0x17, 0x00, 0x01, 0x00, 0x00, 0x07, 0x01, 0x07,
0x10, 0x01, 0x05, 0x20, 0x01, 0x07, 0x20, 0x27, 0x04, 0x01, 0x05, 0x04, 0x07, 0x00, 0x07, 0x00,
0x20, 0x00, 0x04, 0x00, 0x37, 0x10, 0x20, 0x27, 0x00, 0x00, 0x07, 0x07, 0x00, 0x07, 0x07, 0x07,
0x00, 0x10, 0x01, 0x37, 0x00, 0x27, 0x07, 0x27, 0x07, 0x01, 0x00, 0x07, 0x11, 0x27, 0x02, 0x00,
0x30, 0x00, 0x20, 0x00, 0x00, 0x10, 0x11, 0x00, 0x07, 0x07, 0x00, 0x07, 0x00, 0x01, 0x00, 0x10,
0x17, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x27, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x20,
]

uw2_data = [
0x07, 0x3E, 0x22, 0x26, 0x26, 0x26, 0x36, 0x32, 0x32, 0x3E, 0x26, 0x36, 0x22, 0x26, 0x3E, 0x1F,
0x32, 0x1E, 0xF6, 0x36, 0x22, 0x32, 0xA2, 0x92, 0x9E, 0xE6, 0x26, 0xA6, 0xE6, 0x22, 0xF6, 0x26,
0x86, 0x1E, 0xA6, 0xB6, 0x02, 0x92, 0x16, 0x92, 0x16, 0x26, 0x26, 0x26, 0x22, 0x06, 0xB2, 0x4C,
0x36, 0x1E, 0x3E, 0xA6, 0x06, 0x86, 0xA6, 0x82, 0xA6, 0x22, 0x26, 0x22, 0xF2, 0x22, 0x96, 0x26,
0xB6, 0x1E, 0xFE, 0x32, 0x22, 0x32, 0x22, 0x02, 0x36, 0xE2, 0x1A, 0x06, 0x86, 0xE2, 0xA2, 0x10,
0xA6, 0x02, 0xE6, 0x96, 0x02, 0x92, 0x02, 0x06, 0xA2, 0x12, 0x32, 0x22, 0x26, 0x06, 0xF2, 0x26,
0x14, 0x02, 0x26, 0xB6, 0x06, 0x86, 0xE2, 0x30, 0x02, 0x82, 0x82, 0xE6, 0x26, 0x26, 0x82, 0x7C,
0x63, 0x06, 0x71, 0xA6, 0x26, 0x20, 0x02, 0x52, 0x06, 0x02, 0x06, 0x29, 0x26, 0x26, 0x02, 0x26,
0x07, 0x37, 0xA4, 0x32, 0x86, 0x32, 0x84, 0x26, 0x32, 0x9E, 0xE6, 0x25, 0x33, 0x86, 0x26, 0x1F,
0x26, 0x26, 0x36, 0xA7, 0x36, 0xA3, 0x06, 0x26, 0x37, 0xB2, 0x92, 0x96, 0xA6, 0x32, 0x9F, 0x06,
0x26, 0x32, 0x96, 0xB3, 0x87, 0x36, 0xB2, 0x86, 0x24, 0x32, 0x9E, 0x06, 0x26, 0x32, 0x86, 0x3F,
0x32, 0x86, 0x26, 0x33, 0x87, 0x26, 0x32, 0x86, 0x3E, 0x13, 0x86, 0x30, 0x86, 0x24, 0x3F, 0xE6,
0x27, 0x27, 0x27, 0x24, 0x22, 0x02, 0x06, 0x26, 0x24, 0x27, 0x1A, 0x3F, 0xE6, 0x36, 0xA6, 0x10,
0x3F, 0xE6, 0x26, 0x27, 0x32, 0x92, 0x87, 0x27, 0x22, 0x1E, 0x07, 0x24, 0x22, 0x03, 0xF7, 0xA7,
0x55, 0x22, 0x16, 0xA6, 0x22, 0x03, 0xE4, 0x04, 0x32, 0x83, 0x03, 0x02, 0x02, 0x07, 0x26, 0x7C,
0x05, 0x26, 0x74, 0x36, 0xA6, 0x61, 0x26, 0x03, 0x26, 0x23, 0x06, 0x0D, 0x22, 0xE3, 0x03, 0x07,
0x69, 0xEF, 0x0E, 0xB3, 0xF7, 0x7B, 0x0D, 0xF1, 0x35, 0xBA, 0x45, 0x01, 0x31, 0xF9, 0x4B, 0x69,
0xF1, 0x3B, 0x3A, 0xB3, 0x57, 0x23, 0x08, 0xFC, 0xF5, 0x85, 0xBA, 0x85, 0x38, 0x56, 0x33, 0xB8,
0x7B, 0x07, 0xB3, 0xD5, 0x52, 0xB3, 0xD5, 0x08, 0x36, 0xBA, 0x3D, 0x00, 0x00, 0x35, 0x3C, 0x77,
0xF7, 0xFC, 0x37, 0xD5, 0xDB, 0x7B, 0xEF, 0x92, 0xBA, 0x38, 0x01, 0x10, 0x05, 0x0F, 0x8C, 0xF4,
0x7B, 0xF6, 0x3E, 0x0C, 0xA4, 0xFC, 0xA3, 0xF1, 0x0F, 0xF5, 0x69, 0x8B, 0xD6, 0x33, 0xF4, 0x69,
0x53, 0x97, 0x07, 0xFC, 0x7B, 0x3A, 0xB3, 0x7B, 0x31, 0xBA, 0xEA, 0x10, 0x0B, 0xB0, 0x4C, 0xD6,
0x69, 0x07, 0xDB, 0x53, 0xFC, 0xF1, 0x0B, 0xC6, 0xEE, 0x45, 0xDB, 0x85, 0x39, 0xEA, 0x3C, 0x69,
0xA9, 0x00, 0x69, 0xF1, 0x3B, 0x69, 0x00, 0x69, 0x68, 0x00, 0x01, 0x69, 0xF4, 0x3C, 0x00, 0xEF,
0x3F, 0x93, 0xA6, 0xDA, 0xDA, 0xCA, 0xA6, 0xDA, 0x26, 0x8A, 0x24, 0xA5, 0x23, 0xC8, 0x00, 0x3F,
0xC8, 0x25, 0x26, 0x80, 0x1C, 0x14, 0x8A, 0x9F, 0x96, 0x1F, 0xDA, 0x00, 0x24, 0x11, 0x24, 0xDA,
0xDA, 0xA5, 0x9D, 0x12, 0x17, 0x8E, 0x03, 0x8A, 0x26, 0xDA, 0x04, 0x29, 0x29, 0x26, 0x00, 0x3E,
0xCA, 0xA5, 0x27, 0x19, 0x14, 0xA6, 0x80, 0x63, 0x8D, 0x24, 0xA5, 0xA6, 0x85, 0xA6, 0x23, 0x9B,
0x96, 0x80, 0x28, 0xA6, 0x00, 0x80, 0x25, 0x9E, 0xA6, 0x98, 0x3F, 0x23, 0x1C, 0x25, 0x80, 0x3F,
0x14, 0x11, 0x9B, 0xA3, 0x8C, 0x5A, 0x99, 0x94, 0x00, 0x82, 0x19, 0xA6, 0x24, 0x91, 0x24, 0x18,
0x3E, 0xDA, 0x26, 0x1B, 0x9F, 0x98, 0xA6, 0x3E, 0x80, 0x23, 0x09, 0x1E, 0x24, 0x13, 0x25, 0x3F,
0x3E, 0x1B, 0x3E, 0x9F, 0x5A, 0x3E, 0x21, 0x3E, 0x23, 0x21, 0x9D, 0x3E, 0xDA, 0x23, 0x21, 0x96,
0x13, 0x83, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x0F, 0x19, 0x00, 0x00, 0x03, 0x00, 0x0B,
0x03, 0x00, 0x0F, 0x83, 0x03, 0x8F, 0x00, 0x03, 0x97, 0x03, 0x23, 0x00, 0x03, 0x00, 0x03, 0x03,
0x03, 0x03, 0x03, 0x00, 0x83, 0x00, 0x0F, 0x17, 0x03, 0x23, 0x1A, 0x1B, 0x1B, 0x03, 0x17, 0x03,
0x03, 0x03, 0x03, 0x83, 0x0F, 0x16, 0x03, 0x00, 0x0F, 0x03, 0x39, 0x23, 0x1A, 0x23, 0x03, 0x00,
0x0F, 0xA3, 0x8E, 0x23, 0x0F, 0x03, 0x03, 0x19, 0x03, 0x03, 0x07, 0x99, 0x39, 0x03, 0x0F, 0x09,
0x83, 0x03, 0x23, 0x03, 0x03, 0x03, 0x19, 0x99, 0x0F, 0x03, 0x96, 0x03, 0x19, 0x99, 0x19, 0x96,
0x03, 0x19, 0x0F, 0x03, 0x03, 0x83, 0x03, 0x03, 0x00, 0x00, 0x83, 0x03, 0x00, 0x19, 0x0F, 0x11,
0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x19, 0x03, 0x00, 0x03, 0x03, 0x0F, 0x03, 0x99,
0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x07, 0x01, 0x07, 0x07, 0x05, 0x07, 0x00,
0x05, 0x07, 0x07, 0x00, 0x00, 0x07, 0x07, 0x10, 0x01, 0x01, 0x00, 0x07, 0x01, 0x07, 0x01, 0x01,
0x00, 0x20, 0x00, 0x10, 0x00, 0x07, 0x07, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00,
0x05, 0x00, 0x01, 0x00, 0x07, 0x07, 0x00, 0x07, 0x17, 0x00, 0x07, 0x00, 0x37, 0x00, 0x01, 0x07,
0x07, 0x00, 0x03, 0x00, 0x07, 0x00, 0x00, 0x10, 0x10, 0x01, 0x00, 0x01, 0x11, 0x01, 0x07, 0x00,
0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x01, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00,
0x00, 0x10, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x02, 0x01, 0x07, 0x00, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x10, 0x07, 0x00, 0x00,
]

LevelInfoA = 0x0000
LevelInfoB = 0x0080
LevelInfoC = 0x0100
LevelInfoD = 0x0180
LevelInfoE = 0x0200
LevelInfoF = 0x0280

for uw in [0, 1]:
    if uw == 0:
        underworld_data = uw1_data
        offset = 0
    else:
        underworld_data = uw2_data
        offset = 0x80

    for m in range(0, 128):
        door_type_north = (underworld_data[LevelInfoA + m] >> 5) & 0x07
        door_type_south = (underworld_data[LevelInfoA + m] >> 2) & 0x07
        outer_palette = underworld_data[LevelInfoA + m] & 0x03

        door_type_west = (underworld_data[LevelInfoB + m] >> 5) & 0x07
        door_type_east = (underworld_data[LevelInfoB + m] >> 2) & 0x07
        inner_palette = underworld_data[LevelInfoB + m] & 0x03

        enemy_quant = (underworld_data[LevelInfoC + m] >> 6) & 0x03
        enemy_id = underworld_data[LevelInfoC + m] & 0x3F

        enemy_mode = (underworld_data[LevelInfoD + m] >> 7) & 0x01
        push_block = ((underworld_data[LevelInfoD + m] >> 6) & 0x01) == 0x01
        screen_id = underworld_data[LevelInfoD + m] & 0x3F

        dark_room = ((underworld_data[LevelInfoE + m] >> 7) & 0x01) == 0x01
        boss_sfx = (underworld_data[LevelInfoE + m] >> 5) & 0x03
        room_item = underworld_data[LevelInfoE + m] & 0x1F

        item_pos = (underworld_data[LevelInfoF + m] >> 4) & 0x03
        behaviour = underworld_data[LevelInfoF + m] & 0x07
        
        if screen_id == 0x3E or screen_id == 0x3F:
            # This is a passage
            left = underworld_data[LevelInfoA + m] & 0x7F
            right = underworld_data[LevelInfoB + m] & 0x7F
            passage = True
        else:
            passage = False
            left = 0
            right = 0            

        map_id = m + offset
        template = f"""name: "Map {map_id:02X}"
area: Underworld
map: 0x{map_id:02X}
screen: 0x{screen_id:02X}
palettes: [0x{inner_palette:02X}, 0x{outer_palette:02X}]
doors: [0x{door_type_north:02X}, 0x{door_type_south:02X}, 0x{door_type_west:02X}, 0x{door_type_east:02X}] # [north, south, west, east]
passage: {str(passage).lower()}
passage_left: 0x{left:02X}
passage_right: 0x{right:02X}
enemies: 0x{enemy_quant:02X}
enemy_id: 0x{enemy_id:02X}
enemy_mode: 0x{enemy_mode:02X}
push_block: {str(push_block).lower()}
dark_room: {str(dark_room).lower()}
boss_sfx: 0x{boss_sfx:02X}
room_item: 0x{room_item:02X}
item_pos: 0x{item_pos:02X}
behaviour: 0x{behaviour:02X}
"""
        
        f = open(f"Maps/Underworld/{map_id:02X}.yml", "w")
        f.write(template)
        f.close()