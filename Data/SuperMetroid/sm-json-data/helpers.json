{
  "$schema": "./schema/m3-helpers.schema.json",
  "helperCategories": [
    {
      "name": "Randomizer Dependent",
      "description": "Common parameters than may be changed based on the randomizer implementation or settings.",
      "helpers": [
        {
          "name": "h_heatProof",
          "requires": [ "Varia" ],
          "devNote": "In the original game either suit provides full immunity, but many randomizers reduce Gravity's resistance."
        },
        {
          "name": "h_heatResistant",
          "requires": [ "Varia" ],
          "devNote": [
            "Half to full heat reduction.",
            "If a randomizer wants to reduce the heat resistance of Gravity to less than 50%, they will need to double check everywhere this is used."
          ]
        },
        {
          "name": "h_lavaProof",
          "requires": [ "Gravity", "Varia" ],
          "devNote": "In the original game Gravity provides full immunity, but some randomizers also require Varia."
        },
        {
          "name": "h_AllItemsSpawned",
          "requires": [ "never" ],
          "devNote": [
            "In the original game, some items don't spawn until certain conditions are met.",
            "These may be unintuitive to players, so randomizers may want to instead spawn all items at all times, which can be done by removing the 'never' in this helper.",
            "Seven of the eight items in Wrecked Ship only spawn if Phantoon is defeated.",
            "The item in missile in the Final Missile Room, and the Power Bomb in the Morph Ball Room only spawn if Zebes is awake.",
            "The item in the Pit Room only spawns if both Morph and Missiles have been collected.",
            "In addition, in the original game, Morph will no longer spawn if Zebes is awake; this bug is considered never valuable and the data lists it as always spawned regardless of this helper."
          ]
        },
        {
          "name": "h_EverestMorphTunnelExpanded",
          "requires": [ "never" ],
          "devNote": [
            "In order to be able to randomize the connection of the Everest/Main Street morph tunnel, the doorway needs to be expanded to a normal doorway height.",
            "Without being expanded, Samus will get stuck in the wall upon entry unless she enters morphed at the bottom of the transition.",
            "This is not done in vanilla, so this is 'never' by default."
          ]
        },
        {
          "name": "h_canActivateBombTorizo",
          "requires": [ "Bombs" ],
          "devNote": [
            "In the vanilla game, Bomb Torizo is activated by having collected Bombs.",
            "This may be changed in randomizers, e.g. to make it activate when collecting the (randomized) item in Bomb Torizo Room."
          ]
        },
        {
          "name": "h_canActivateAcidChozo",
          "requires": [ "SpaceJump" ],
          "devNote": "In Vanilla, the Acid Chozo Statue requires Space Jump to activate. This may be unintuitive in a randomizer, as many players will have never been there without Space Jump."
        },
        {
          "name": "h_ShaktoolVanillaFlag",
          "requires": [],
          "devNote": "In Vanilla, the flag is set when exiting the right door. This may be set to 'never' to instead require traversing the room no matter which side is entered."
        },
        {
          "name": "h_ShaktoolCameraFix",
          "requires": [ "never" ],
          "devNote": "In Vanilla, the camera is messed up when entering from the right. Fixing the camera changes the room behavior by allowing the snails to move."
        },
        {
          "name": "h_KraidCameraFix",
          "requires": [ "never" ],
          "devNote": "In Vanilla, the camera is fixed to the bottom left tile if Kraid is alive. When entering from the right, Samus will spawn in the middle of the room, likely dropping into the thorns."
        },
        {
          "name": "h_CrocomireCameraFix",
          "requires": [ "never" ],
          "devNote": "In Vanilla, the camera is messed up when entering from the left with Crocomire alive."
        },
        {
          "name": "h_MissileRefillStationAllAmmo",
          "requires": [ "never" ],
          "devNote": "In Vanilla, Missile refill stations only refill Missiles. This and 'h_useMissileRefillStation' can be changed if the stations refill Missiles, Supers, and Power Bombs."
        },
        {
          "name": "h_useMissileRefillStation",
          "requires": [
            {"refill": ["Missile"]}
          ]
        },
        {
          "name": "h_useMissileRefillAllAmmoCrystalFlash",
          "requires": [
            "h_MissileRefillStationAllAmmo",
            "h_can10PowerBombCrystalFlash",
            {"refill": ["Missile", "Super", "PowerBomb"]}
          ],
          "devNote": "A partial refill of 1500 Energy is also included in h_can10PowerBombCrystalFlash."
        },
        {
          "name": "h_useEnergyRefillStation",
          "requires": [
            {"refill": ["RegularEnergy"]}
          ],
          "devNote": "In Vanilla, Energy refill stations only refill regular energy. This can be changed if the stations refill Reserve energy as well."
        },
        {
          "name": "h_AccessTourianEscape1RightDoor",
          "requires": [ "never" ],
          "devNote": "In Vanilla, there is a wall preventing the player from accessing the right door."
        },
        {
          "name": "h_LowerNorfairElevatorDownwardFrames",
          "requires": [
            {"heatFrames": 60}
          ],
          "devNote": "This may be changed if the elevator speed is changed."
        },
        {
          "name": "h_LowerNorfairElevatorUpwardFrames",
          "requires": [
            {"heatFrames": 108}
          ],
          "devNote": "This may be changed if the elevator speed is changed."
        },
        {
          "name": "h_MainHallElevatorFrames",
          "requires": [
            {"heatFrames": 436},
            {"or":[
              "h_heatResistant",
              {"resourceCapacity": [{"type": "RegularEnergy", "count": 149}]}
            ]}
          ],
          "devNote": [
            "Samus can not manually use reserves during the elevator, so enough regular energy is needed for the elevator ride unless she is using an auto reserve strat.",
            "This may be changed if the elevator speed is changed.",
            "Technically it requires 1 more Energy going up than going down, but they're lumped together here."
          ]
        },
        {
          "name": "h_AcidCrystalFlashRefill",
          "requires": [
            {"or": [
              {"partialRefill": {"type": "Energy", "limit": 1120}},
              {"and": [
                "Varia",
                {"partialRefill": {"type": "Energy", "limit": 1310}}
              ]},
              {"and": [
                "Gravity",
                {"partialRefill": {"type": "Energy", "limit": 1410}}
              ]}
            ]}
          ]
        },
        {
          "name": "h_HeatedCrystalFlashRefill",
          "requires": [
            {"or": [
              {"partialRefill": {"type": "Energy", "limit": 1440}},
              {"and": [
                "Varia",
                {"partialRefill": {"type": "Energy", "limit": 1500}}
              ]},
              {"and": [
                "Gravity",
                {"partialRefill": {"type": "Energy", "limit": 1500}}
              ]}
            ]}
          ]
        },
        {
          "name": "h_HeatedLavaCrystalFlashRefill",
          "requires": [
            {"or": [
              {"partialRefill": {"type": "Energy", "limit": 1330}},
              {"and": [
                "Varia",
                {"partialRefill": {"type": "Energy", "limit": 1440}}
              ]},
              {"and": [
                "Gravity",
                {"partialRefill": {"type": "Energy", "limit": 1500}}
              ]}
            ]}
          ]
        },
        {
          "name": "h_HeatedAcidCrystalFlashRefill",
          "requires": [
            {"or": [
              {"partialRefill": {"type": "Energy", "limit": 1075}},
              {"and": [
                "Varia",
                {"partialRefill": {"type": "Energy", "limit": 1310}}
              ]},
              {"and": [
                "Gravity",
                {"partialRefill": {"type": "Energy", "limit": 1410}}
              ]}
            ]}
          ]
        },
        {
          "name": "h_EtecoonDoorSpawnFix",
          "requires": [ "never" ],
          "devNote": [
            "In Vanilla, there is a bug placing the door at the top of the Etecoon Shaft in the wrong location.",
            "This primarily affects the closing animation and prevents return through the door while in direct g-mode."
          ]
        },
        {
          "name": "h_SupersDoubleDamageMotherBrain",
          "requires": [ "never" ],
          "devNote": "In Vanilla, Supers do 300 damage to Mother Brain. Randomizers may want to double this to help prevent Charge being required so frequently."
        },
        {
          "name": "h_BypassMotherBrainRoom",
          "requires": [],
          "devNote": [
            "This helper is required on strats that completely bypass the right side of Mother Brain Room.",
            "For example, in Map Rando these would allow initiating the Mother Brain fight without first completing the objectives."
          ]
        },
        {
          "name": "h_ShinesparksCostEnergy",
          "requires": []
        }
      ]
    },
    {
      "name": "Leniency",
      "description": "Helpers with built in leniency where extra Energy or Ammo are used in a failure.",
      "helpers": [
        {
          "name": "h_BlueGateGlitchLeniency",
          "requires": [
            {"or": [
              {"ammo": {"type": "Missile", "count": 1}},
              {"ammo": {"type": "Super", "count": 1}}
            ]}
          ],
          "devNote": "Ammo for a second shot for leniency."
        },
        {
          "name": "h_GreenGateGlitchLeniency",
          "requires": [
            {"ammo": {"type": "Super", "count": 1}}
          ],
          "devNote": "Ammo for a second shot for leniency."
        },
        {
          "name": "h_HeatedBlueGateGlitchLeniency",
          "requires": [ 
            "h_BlueGateGlitchLeniency",
            {"heatFrames": 60}
          ],
          "devNote": "One ammo and 60 heatFrames for a second shot for leniency."
        },
        {
          "name": "h_HeatedGreenGateGlitchLeniency",
          "requires": [ 
            "h_GreenGateGlitchLeniency",
            {"heatFrames": 60}
          ],
          "devNote": "One ammo and 60 heatFrames for a second shot for leniency."
        },
        {
          "name": "h_OpenZebetitesLeniency",
          "requires": [
            {"or": [
              "canDodgeWhileShooting",
              {"ammo": {"type": "Missile", "count": 3}},
              {"ammo": {"type": "Super", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_BombIntoCrystalFlashClipLeniency",
          "requires": [
            {"ammo": {"type": "PowerBomb","count": 5}}
          ],
          "devNote": "1 Power bomb leniency per attempt, 5 leniency attempts."
        },
        {
          "name": "h_JumpIntoCrystalFlashClipLeniency",
          "requires": [
            {"ammo": {"type": "PowerBomb","count": 9}}
          ],
          "devNote": "1 Power bomb leniency per attempt, 9 leniency attempts."
        },
        {
          "name": "h_XModeSpikeHitLeniency",
          "requires": [
            {"spikeHits": 1}
          ]
        },
        {
          "name": "h_XModeThornHitLeniency",
          "requires": [
            {"thornHits": 1}
          ]
        },
        {
          "name": "h_ExtendedMoondanceBeetomLeniency",
          "requires": [
            {"enemyDamage": {
              "enemy": "Beetom",
              "type": "contact",
              "hits": 3
            }}
          ],
          "devNote": "Moving carefully while switching weapons makes it more likely to take random damage."
        },
        {
          "name": "h_IBJFromThorns",
          "requires": [
            "canIframeSpikeJump",
            "canJumpIntoIBJ",
            "canCarefulJump",
            {"thornHits": 1},
            {"or":[
              "canTrickyJump",
              {"thornHits": 3}
            ]}
          ]
        },
        {
          "name": "h_IBJFromSpikes",
          "requires": [
            "canIframeSpikeJump",
            "canJumpIntoIBJ",
            "canCarefulJump",
            {"spikeHits": 1},
            {"or":[
              "canTrickyJump",
              {"spikeHits": 3}
            ]}
          ]
        },
        {
          "name": "h_HeatedIBJFromSpikes",
          "requires": [
            "canIframeSpikeJump",
            "canJumpIntoIBJ",
            "canCarefulJump",
            {"spikeHits": 1},
            {"heatFrames": 100},
            {"or":[
              "canTrickyJump",
              {"and": [
                {"spikeHits": 3},
                {"heatFrames": 300}
              ]}
            ]}
          ]
        },
        {
          "name": "h_SpringwallOverSpikes",
          "requires": [
            "canSpringwall",
            {"or":[
              "canTrickyJump",
              {"spikeHits": 2}
            ]}
          ],
          "devNote": "2 extra attempts for leniency."
        },
        {
          "name": "h_HeatedSpringwall",
          "requires": [
            "canSpringwall",
            {"or":[
              "canTrickyJump",
              {"heatFrames": 500}
            ]}
          ],
          "devNote": "2 extra attempts for leniency."
        }
      ]
    },
    {
      "name": "General",
      "description": "Standard helpers used to simplify the game logic.",
      "helpers": [
        {
          "name": "h_canNavigateHeatRooms",
          "requires": [
            {"or":[
              "h_heatProof",
              "canHeatRun"
            ]}
          ],
          "devNote": [
            "This helper is deprecated, as these requirements are now implicitly included in heatFrame requirements."
          ]
        },
        {
          "name": "h_canNavigateUnderwater",
          "requires": [
            {"or":[
              "Gravity",
              "canSuitlessMaridia"
            ]}
          ]
        },
        {
          "name": "h_canUseMorphBombs",
          "requires": [
            "Morph",
            "Bombs"
          ]
        },
        {
          "name": "h_canUsePowerBombs",
          "requires": [
            "Morph",
            {"ammo": {"type": "PowerBomb", "count": 1}}
          ]
        },
        {
          "name": "h_canBombThings",
          "requires": [
            "Morph",
            {"or": [
              "Bombs",
              {"ammo": { "type": "PowerBomb", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canDestroyBombWalls",
          "requires": [
            {"or": [
              "h_canBombThings",
              "ScrewAttack"
            ]}
          ]
        },
        {
          "name": "h_additionalBomb",
          "requires": [
            {"or": [
              "Bombs",
              {"ammo": { "type": "PowerBomb", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canFly",
          "requires": [
            {"or": [
              "canIBJ",
              "SpaceJump"
            ]}
          ]
        },
        {
          "name": "h_canUseSpringBall",
          "requires": [
            "SpringBall",
            "Morph"
          ]
        },
        {
          "name": "h_hasBeamUpgrade",
          "requires": [
            {"or": [
              "Charge",
              "Ice",
              "Wave",
              "Spazer",
              "Plasma"
            ]}
          ]
        },
        {
          "name": "h_canShineChargeMaxRunway",
          "requires": [ 
            {"canShineCharge": {
              "usedTiles": 45,
              "openEnd": 1
            }}
          ]
        },
        {
          "name": "h_getBlueSpeedMaxRunway",
          "requires": [ 
            {"getBlueSpeed": {
              "usedTiles": 40,
              "openEnd": 1
            }}
          ],
          "devNote": [
            "The longest necessary runway for blue speed is less than shinecharging, because while shinecharging Samus slides after pressing down, and then typically needs to jump again.",
            "This helper can be used on strats with a shorter than 40 tile runway, if Samus just needs run through an enemy or speed blocks (as low as 32 tiles is expected in vanilla)."
          ]
        },
        {
          "name": "h_canBlueGateGlitch",
          "requires": [
            "canGateGlitch",
            {"or": [
              {"ammo": {"type": "Missile", "count": 1}},
              {"ammo": {"type": "Super", "count": 1}}
            ]},
            "h_BlueGateGlitchLeniency"
          ]
        },
        {
          "name": "h_canGreenGateGlitch",
          "requires": [
            "canGateGlitch",
            {"ammo": {"type": "Super", "count": 1}},
            "h_GreenGateGlitchLeniency"
          ]
        },
        {
          "name": "h_canHeatedBlueGateGlitch",
          "requires": [ 
            "h_canNavigateHeatRooms",
            {"heatFrames": 100},
            "canGateGlitch",
            {"or": [
              {"ammo": {"type": "Missile", "count": 1}},
              {"ammo": {"type": "Super", "count": 1}}
            ]},
            "h_HeatedBlueGateGlitchLeniency"
          ]
        },
        {
          "name": "h_canHeatedGreenGateGlitch",
          "requires": [ 
            "h_canNavigateHeatRooms",
            {"heatFrames": 100},
            "canGateGlitch",
            {"ammo": {"type": "Super", "count": 1}},
            "h_HeatedGreenGateGlitchLeniency"
          ]
        },
        {
          "name": "h_canCrouchJumpDownGrab",
          "requires": [ 
            "canCrouchJump",
            "canDownGrab"
          ]
        },
        {
          "name": "h_canPlasmaHitbox",
          "requires": [
            "Plasma",
            "canHitbox"
          ]
        },
        {
          "name": "h_canThreeTileJumpMorph",
          "requires": [
            {"or": [
              "can3HighWallMidAirMorph",
              "canRJump"
            ]}
          ]
        },
        {
          "name": "h_canFourTileJumpMorph",
          "requires": [
            {"or": [
              "h_canThreeTileJumpMorph",
              "can4HighMidAirMorph"
            ]}
          ]
        },
        {
          "name": "h_canOpenZebetites",
          "requires": [
            {"or": [
              {"ammo": {"type": "Missile", "count": 12}},
              {"ammo": {"type": "Super", "count": 4}},
              {"and": [
                {"ammo": {"type": "Missile", "count": 3}},
                {"ammo": {"type": "Super", "count": 3}}
              ]},
              {"and": [
                {"ammo": {"type": "Missile", "count": 6}},
                {"ammo": {"type": "Super", "count": 2}}
              ]},
              {"and": [
                {"ammo": {"type": "Missile", "count": 9}},
                {"ammo": {"type": "Super", "count": 1}}
              ]}
            ]},
            "h_OpenZebetitesLeniency"
          ],
          "devNote": "Technically all of the strats that use missiles can be done with 1 fewer missile. It requires fairly precise timing and dodging to open it fast enough."
        },
        {
          "name": "h_canPartiallyBreakMotherBrainGlass",
          "requires": [
            {"or": [
              {"ammo": {"type": "Missile", "count": 1}},
              {"ammo": {"type": "Super", "count": 1}}
            ]},
            {"or": [
              {"ammo": {"type": "Missile", "count": 5}},
              {"ammo": {"type": "Super", "count": 5}}
            ]}
          ],
          "devNote": "It requires 6 shots of either ammo type to partially open the glass and 18 to fully break it."
        },
        {
          "name": "h_canBreakOneDraygonTurret",
          "requires" : [
            {"or":[
              {"ammo": {"type": "Missile", "count": 3}},
              {"ammo": {"type": "Super", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canBreakThreeDraygonTurrets",
          "requires" : [
            "h_canBreakOneDraygonTurret",
            "h_canBreakOneDraygonTurret",
            "h_canBreakOneDraygonTurret"
          ]
        },
        {
          "name": "h_canDoubleSpringBallJumpWithHiJump",
          "requires": [
            "HiJump",
            "canDoubleSpringBallJumpMidAir"
          ]
        },
        {
          "name": "h_canCrystalFlash",
          "requires": [
            "canCrystalFlash",
            {"partialRefill": {"type": "Energy", "limit": 1500}}
          ]
        },
        {
          "name": "h_canAcidCrystalFlash",
          "requires": [
            {"acidFrames": 185},
            "canCrystalFlash",
            "h_AcidCrystalFlashRefill",
            {"acidFrames": 20},
            {"or": [
              "Gravity",
              {"acidFrames": 5}
            ]}
          ],
          "devNote": [
            "These requirements are tight but include time to morph before laying the Power Bomb and to land after the Crystal Flash refill completes."
          ]
        },
        {
          "name": "h_canHeatedCrystalFlash",
          "requires": [
            {"heatFrames": 185},
            "canCrystalFlash",
            "h_HeatedCrystalFlashRefill",
            {"heatFrames": 20}
          ],
          "devNote": [
            "These requirements are tight but include time to morph before laying the Power Bomb and to land after the Crystal Flash refill completes."
          ]
        },
        {
          "name": "h_canHeatedLavaCrystalFlash",
          "requires": [
            {"heatFrames": 185},
            {"lavaFrames": 185},
            "canCrystalFlash",
            "h_HeatedLavaCrystalFlashRefill",
            {"heatFrames": 20},
            {"lavaFrames": 20},
            {"or": [
              "Gravity",
              {"and": [
                {"heatFrames": 5},
                {"lavaFrames": 5}
              ]}
            ]}
          ],
          "devNote": [
            "These requirements are tight but include time to morph before laying the Power Bomb and to land after the Crystal Flash refill completes."
          ]
        },
        {
          "name": "h_canHeatedAcidCrystalFlash",
          "requires": [
            {"heatFrames": 185},
            {"acidFrames": 185},
            "canCrystalFlash",
            "h_HeatedAcidCrystalFlashRefill",
            {"heatFrames": 20},
            {"acidFrames": 20},
            {"or": [
              "Gravity",
              {"and": [
                {"heatFrames": 5},
                {"acidFrames": 5}
              ]}
            ]}
          ],
          "devNote": [
            "These requirements are tight but include time to morph before laying the Power Bomb and to land after the Crystal Flash refill completes."
          ]
        },
        {
          "name": "h_canBombIntoCrystalFlashClip",
          "requires": [
            {"tech": "canBombIntoCrystalFlashClip"},
            "Bombs",
            "h_canCrystalFlash",
            "h_BombIntoCrystalFlashClipLeniency"
          ]
        },
        {
          "name": "h_canJumpIntoCrystalFlashClip",
          "requires": [
            {"tech": "canJumpIntoCrystalFlashClip"},
            {"or": [
              "SpringBall",
              "canMidAirMorph"
            ]},
            "h_canCrystalFlash",
            "h_JumpIntoCrystalFlashClipLeniency"
          ]
        },
        {
          "name": "h_can10PowerBombCrystalFlash",
          "requires": [
            "can10PowerBombCrystalFlash",
            {"partialRefill": {"type": "Energy", "limit": 1500}}
          ]
        },
        {
          "name": "h_canHeated10PowerBombCrystalFlash",
          "requires": [
            "can10PowerBombCrystalFlash",
            "h_HeatedCrystalFlashRefill"
          ],
          "devNote": "All heat frames before and after the refill are added on the strats that use the helper."
        },
        {
          "name": "h_XModeSpikeHit",
          "requires": [
            {"spikeHits": 1},
            "h_XModeSpikeHitLeniency"
          ],
          "devNote": [
            "Some strats require multiple spike hits, in which case h_canSpikeXMode will be included multiple times.",
            "In this case, the total leniency is the base leniency h_XModeSpikeHitLeniency multiplied by the number of hits."
          ]
        },
        {
          "name": "h_XModeThornHit",
          "requires": [
            {"thornHits": 1},
            "h_XModeThornHitLeniency"
          ],
          "devNote": [
            "Some strats require multiple thorn hits, in which case h_canThornXMode will be included multiple times.",
            "In this case, the total leniency is the base leniency h_XModeThornHitLeniency multiplied by the number of hits."
          ]
        },
        {
          "name": "h_canXRayMorphIceClip",
          "requires": [
            "canXRayCeilingClip",
            "canTrickyUseFrozenEnemies"
          ]
        },
        {
          "name": "h_canPreciseIceClip",
          "requires": [
            "canTrickyUseFrozenEnemies",
            "canPreciseCeilingClip"
          ]
        },
        {
          "name": "h_canHighPixelIceClip",
          "requires": [
            "canTrickyUseFrozenEnemies",
            "canHighPixelCeilingClip"
          ]
        },
        {
          "name": "h_canIceClip",
          "requires": [
            {"or":[
              "h_canXRayMorphIceClip",
              "h_canPreciseIceClip",
              "h_canHighPixelIceClip"
            ]}
          ]
        },
        {
          "name": "h_canMaxHeightSpringBallJump",
          "requires": [
            "canCrouchJump",
            "canTrickySpringBallJump",
            "canTrickyJump"
          ]
        },
        {
          "name": "h_canTrickySpringwall",
          "requires": [
            "canTrickySpringBallJump",
            "canSpringwall",
            "canSpringFling",
            "canTrickyJump"
          ]
        },
        {
          "name": "h_canBackIntoCorner",
          "requires": [
            {"or": [
              "Morph",
              "canXRayTurnaround",
              "canMoonwalk"
            ]}
          ],
          "note": [
            "Back into a corner with Moonwalk, an X-Ray turnaround, or a precise Morph turnaround.",
            "It is possible to turn around with Morph without moving at all, which requires a very short input."
          ],
          "devNote": "FIXME: Turning around with Morph could use another tech, but strats requiring pixel precision typically already require more tech."
        },
        {
          "name": "h_ZebesIsAwake",
          "requires": [
            "canAwakenZebes",
            "f_ZebesAwake"
          ]
        },
        {
          "name": "h_ZebesNotAwake",
          "requires": [
            "canAwakenZebes",
            {"not": "f_ZebesAwake"},
            "canRiskPermanentLossOfAccess"
          ]
        },
        {
          "name": "h_canFrozenEnemyRunway",
          "requires": [
            "canEnemyExtendRunway",
            "canTrickyUseFrozenEnemies"
          ]
        },
        {
          "name": "h_canTrickyFrozenEnemyRunway",
          "requires": [
            "canTrickyEnemyExtendRunway",
            "canTrickyUseFrozenEnemies"
          ]
        },
        {
          "name": "h_canMidAirShootUp",
          "requires": [
            {"or": [
              {"noFlashSuit": {}},
              "Morph"
            ]}
          ]
        }
      ]
    },
    {
      "name": "Door Unlocks",
      "description": "Ammo requirements needed to unlock different door types.",
      "helpers": [
        {
          "name": "h_canOpenRedDoors",
          "requires": [
            {"or": [
              {"ammo": {"type": "Missile", "count": 5}},
              {"ammo": {"type": "Super", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canOpenGreenDoors",
          "requires": [ {"ammo": {"type": "Super", "count": 1}} ]
        },
        {
          "name": "h_canOpenYellowDoors",
          "requires": [ "h_canUsePowerBombs" ]
        },
        {
          "name": "h_canOpenEyeDoors",
          "requires": [
            {"or": [
              {"ammo": {"type": "Missile", "count": 3}},   
              {"ammo": {"type": "Super", "count": 1}}
            ]}
          ]
        }
      ]
    },
    {
      "name": "Artificial Morph",
      "description": "Helpers used in G-Mode Artificial Morph Strats.",
      "helpers": [
        {
          "name": "h_canArtificialMorphSpringBall",
          "requires": [
            "SpringBall"
          ]
        },
        {
          "name": "h_canArtificialMorphBombThings",
          "requires": [
            {"or": [
              "Bombs",
              {"ammo": { "type": "PowerBomb", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canArtificialMorphBombs",
          "requires": [
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphPowerBomb",
          "requires": [
            {"ammo": { "type": "PowerBomb", "count": 1}}
          ]
        },
        {
          "name": "h_canArtificialMorphIBJ",
          "requires": [
            {"tech": "canIBJ"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphJumpIntoIBJ",
          "requires": [
            {"tech": "canJumpIntoIBJ"},
            "Bombs",
            "SpringBall"
          ]
        },
        {
          "name": "h_canArtificialMorphBombAboveIBJ",
          "requires": [
            {"tech": "canBombAboveIBJ"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphCeilingBombJump",
          "requires": [
            {"tech": "canCeilingBombJump"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphLongCeilingBombJump",
          "requires": [
            {"tech": "canLongCeilingBombJump"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphDiagonalBombJump",
          "requires": [
            {"tech": "canDiagonalBombJump"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphDoubleBombJump",
          "requires": [
            {"tech": "canDoubleBombJump"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphStaggeredIBJ",
          "requires": [
            {"tech": "canStaggeredIBJ"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphBombHorizontally",
          "requires": [
            {"tech": "canBombHorizontally"},
            {"or": [
              "Bombs",
              {"ammo": {"type": "PowerBomb", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canArtificialMorphHBJ",
          "requires": [
            {"tech": "canHBJ"},
            "Bombs"
          ]
        },
        {
          "name": "h_canArtificialMorphResetFallSpeed",
          "requires": [{"tech": "canResetFallSpeed"}]
        },
        {
          "name": "h_canArtificialMorphSpringFling",
          "requires": [{"tech": "canSpringFling"}]
        },
        {
          "name": "h_canArtificialMorphSpringBallBombJump",
          "requires": [
            {"tech": "canSpringBallBombJump"},
            "SpringBall",
            {"or": [
              "Bombs",
              {"ammo": {"type": "PowerBomb", "count": 1}}
            ]}
          ]
        },
        {
          "name": "h_canArtificialMorphCrystalFlash",
          "requires": [
            {"tech": "canCrystalFlash"},
            {"ammo": {"type": "PowerBomb", "count": 1}},
            {"ammo": {"type": "Missile", "count": 10}},
            {"ammo": {"type": "Super", "count": 10}},
            {"ammo": {"type": "PowerBomb", "count": 10}},
            {"partialRefill": {"type": "Energy", "limit": 1500}},
            {"noFlashSuit": {}}
          ],
          "devNote": "FIXME: Samus may not get a full refill, depending on the number of tanks and environment."
        },
        {
          "name": "h_canArtificialMorphBombIntoCrystalFlashClip",
          "requires": [
            {"tech": "canBombIntoCrystalFlashClip"},
            "Bombs",
            "h_canArtificialMorphCrystalFlash",
            "h_BombIntoCrystalFlashClipLeniency"
          ]
        },
        {
          "name": "h_canArtificialMorphMovement",
          "requires": [
            {"or": [
              "h_canArtificialMorphSpringBall",
              "h_canArtificialMorphIBJ",
              "Morph"
            ]}
          ],
          "note": [
            "These are ways to navigate stairs and small platforms for strats assuming G-mode artificial morph.",
            "Having Morph means we can unmorph, jump, and remorph, as using artificial morph is not needed in that case."
          ],
          "devNote": [
            "Morph will not be a usable alternative to get up very constrained ledges, such as in a morph tunnel.",
            "IBJ is not usable for underwater rooms without Gravity."
          ]
        }
      ]
    }
  ]
}
